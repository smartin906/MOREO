---
/**
 * SectionGallery â€” image cards with full-bleed image + bottom overlay text.
 * Props:
 * items: Array<{ src: string; alt?: string; title: string; caption?: string; href?: string }>
 * title?: string
 * columns?: number     // desktop columns (default 3)
 * aspect?: string      // card aspect ratio (default "16 / 9")
 */
type Item = { src: string; alt?: string; title: string; caption?: string; href?: string };
interface Props { items: Item[]; title?: string; columns?: number; aspect?: string }
const { items = [], title, columns = 3, aspect="3 / 4" } = Astro.props as Props;
---
<section class="section gallery">
  <div class="container">
    {title && <h2 class="gallery__title">{title}</h2>}

    <div class="grid" style={`--cols:${columns}; --aspect:${aspect}`}>
      {items.map((it) => {
        const Inner = (
          <>
            <img src={it.src} alt={it.alt ?? ""} loading="lazy" decoding="async" />
            <div class="overlay">
              <h3 class="card__title">{it.title}</h3>
              {it.caption && <p class="card__caption">{it.caption}</p>}
            </div>
          </>
        );
        return (
          <figure class="card">
            {it.href ? <a class="card__link" href={it.href} aria-label={it.title}>{Inner}</a> : Inner}
          </figure>
        );
      })}
    </div>
  </div>

  <style>
    .gallery { padding-block: clamp(1.5rem, 3vw, 3rem); }
    .gallery__title { color: #fff; text-align: center; margin: 0 0 1rem; font-size: clamp(1.1rem, 1rem + 1vw, 1.6rem); }

    .grid {
      --gap: 1rem;
      display: grid;
      grid-template-columns: repeat(1, minmax(0, 1fr));
      gap: var(--gap);
    }
    @media (min-width: 640px) { .grid { grid-template-columns: repeat(2, minmax(0, 1fr)); } }
    @media (min-width: 960px) { .grid { grid-template-columns: repeat(var(--cols, 3), minmax(0, 1fr)); } }

    .card {
      position: relative;
      margin: 0;
      background: #0b1220;
      border: 1px solid #243143;
      border-radius: 14px;
      overflow: hidden;
      transition: transform .25s ease, box-shadow .25s ease, border-color .25s ease;

      /* Image fills this box */
      aspect-ratio: var(--aspect, 16 / 9);
    }
    .card__link { display:block; position:relative; width:100%; height:100%; }

    .card img {
      position: absolute; inset: 0;
      width: 100%; height: 100%;
      object-fit: cover; object-position: center;
      display: block;
      transform: scale(1.0);
      transition: transform .35s ease, filter .35s ease;
    }

    .overlay {
      position: absolute; left: 0; right: 0; bottom: 0;
      padding: 10rem 1rem .95rem;
      color: #fff;
      background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,.35) 20%, rgba(0,0,0,.65) 100%);
      pointer-events: none;
    }

    .card__title { color: #fff; text-align: center; margin: 0; font-size: clamp(1rem, .95rem + .4vw, 1.1rem); line-height: 1.25; text-shadow: 0 1px 1px rgba(0,0,0,.35); }
    .card__caption { text-align:center; margin:.25rem 0 0; font-size:.95rem; opacity:.95; color:#e5e7eb; text-shadow:0 1px 1px rgba(0,0,0,.35); }

    .card:hover { transform: translateY(-2px); border-color:#2d3a4f; box-shadow:0 8px 22px rgba(0,0,0,.25); }
    .card:hover img { transform: scale(1.04); filter: saturate(1.05) brightness(1.02); }

    @media (prefers-reduced-motion: reduce) {
      .card, .card img { transition: none; }
      .card:hover { transform: none; box-shadow: none; }
    }
  </style>
</section>
